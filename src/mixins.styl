$easeInOutCubic = cubic-bezier(0.645, 0.045, 0.355, 1)
$bw = 1px
$bs = solid
$bc = base(1)
$b = $bw $bs $bc
$i = !important
$t = transparent

S($x, $y)
  s($x, unquote($y))
v($x)
  var(S("--%s", $x))
fg($x)
  v(S("text-%s", $x))
selection($x)
  v(S("selection-%s", $x))
font($x, $y)
  v(s("%s-font-%s", unquote($x), unquote($y)))
t($x)
  v(S("%s-transparent", $x))
alt($x)
  v(S("%s-alt", $x))
light($x)
  v(S("%s-light", $x))
dark($x)
  v(S("%s-dark", $x))
scrollbar($x)
  v(S("scrollbar-%s", $x))
base($x)
  v(s("base-%s", $x))
map($fn, $list)
  for $val, $i in $list
    $list[$i] = $fn($val)
  $list
prop($p, $x...)
  {$p} $x $i
map-record($rec = {}, $prefix = '', $prop)
  {$prefix}
    for $k, $v in $rec
      &{$k}
        +cache("x", $v, "p", $prop)
          {$prop} $v $i
color-prop($p, $x)
  if ($x is a "call" || $x is a "rgba" || $x == none)
    prop $p $x
/**
 * c <foreground> <border-color> <background>
 * use 0 to omit arguments
 */
c($x, $y = 0, $z = 0)
  color-prop "color" $x
  color-prop "border-color" $y
  color-prop "background-color" $z
/**
 * vc <fill> <stroke> <fill-important> <stroke-important>
 * use 0 to omit arguments
 */
vc($x, $y = 0)
  color-prop "fill" $x
  color-prop "stroke" $y
caret($direction = "bottom", $bg = base(4), $border = base(1))
    $p = "border-" + $direction + "-color"
    &::before
      prop $p $border
    &::after
      prop $p $bg
bgi($x...)
  prop "background-image" $x
bgs($x...)
  prop "background-size" $x
bgr($x...)
  prop "background-repeat" $x
bgp($x...)
  prop "background-position" $x
bg($x...)
  prop "background" $x
bgc($x...)
  prop "background-color" $x

b($x...)
  prop "border" $x
bw($x...)
  prop "border-width" $x
bc($x...)
  prop "border-color" $x
bs($x...)
  prop "border-style" $x
by($x...)
  +cache("x", $x)
    for $d in top bottom
      border-{$d} $x $i
byc($x = $bc)
  +cache("x", $x)
    for $d in top bottom
      border-{$d}-color $x $i
byw($x = $bw)
  +cache("x", $x)
    for $d in top bottom
      border-{$d}-width $x $i
bys($x = $bs)
  +cache("x", $x)
    for $d in top bottom
      border-{$d}-style $x $i

bx($x...)
  +cache("x", $x)
    for $d in left right
      border-{$d} $x $i
bxw($x = $bw)
  +cache("x", $x)
    for $d in left right
      border-{$d}-width $x $i
bxs($x = $bs)
  +cache("x", $x)
    for $d in left right
      border-{$d}-style $x $i
bxc($x = $bc)
  +cache("x" + $x)
    for $d in left right
      border-{$d}-color $x $i

bt($x...)
  prop "border-top" $x
btw($x = $bw)
  prop "border-top-width" $x
bts($x = $bs)
  prop "border-top-style" $x
btc($x = $bc)
  prop "border-top-color" $x

bb($x...)
  prop "border-bottom" $x
bbw($x = $bw)
  prop "border-bottom-width" $x
bbs($x = $bs)
  prop "border-bottom-style" $x
bbc($x = $bc)
  prop "border-bottom-color" $x

bl($x...)
  prop "border-left" $x
blw($x = $bw)
  prop "border-left-width" $x
bls($x = $bs)
  prop "border-left-style" $x
blc($x = $bc)
  prop "border-left-color" $x

br($x...)
  prop "border-right" $x
brw($x = $bw)
  prop "border-right-width" $x
brs($x = $bs)
  prop "border-right-style" $x
brc($x = $bc)
  prop "border-right-color" $x

r($x...)
  prop "border-radius" $x
rtl($x)
  prop "border-top-left-radius" $x
rtr($x)
  prop "border-top-right-radius" $x
rbl($x)
  prop "border-bottom-left-radius" $x
rbr($x)
  prop "border-bottom-right-radius" $x
rr($x)
  +cache("x" + $x)
    for $d in top bottom
      border-{$d}-right-radius $x $i
rl($x)
  +cache("x" + $x)
    for $d in top bottom
      border-{$d}-left-radius $x $i
rb($x)
  +cache("x" + $x)
    for $d in left right
      border-bottom-{$d}-radius $x $i
rt($x)
  +cache("x" + $x)
    for $d in left right
      border-top-{$d}-radius $x $i
m($x...)
  prop "margin" $x
my($x)
  +cache("x" + $x)
    for $d in top bottom
      margin-{$d} $x $i
mx($x)
  +cache("x" + $x)
    for $d in left right
      margin-{$d} $x $i
mt($x)
  prop "margin-top" $x
mb($x)
  prop "margin-bottom" $x
ml($x)
  prop "margin-left" $x
mr($x)
  prop "margin-right" $x

p($x...)
  prop "padding" $x
pt($x)
  prop "padding-top" $x
pb($x)
  prop "padding-bottom" $x
pl($x)
  prop "padding-left" $x
pr($x)
  prop "padding-right" $x
py($x)
  +cache("x" + $x)
    for $d in top bottom
      padding-{$d} $x $i
px($x)
  +cache("x" + $x)
    for $d in left right
      padding-{$d} $x $i
lh($x)
  prop "line-height" $x
po($x)
  prop "position" $x
o($x)
  prop "opacity" $x
a($x...)
  prop "animation" $x
tr($x...)
  prop "transition" $x
ease($x...)
  +cache("x" + $x)
    tr $x 300ms $easeInOutCubic
fn($x)
  prop "font-family" $x
fs($x)
  prop "font-size" $x
fw($x)
  prop "font-weight" $x
td($x)
  prop "text-decoration" $x
sbc($x...)
  prop "scrollbar-color" $x
sbw($x...)
  prop "scrollbar-width" $x
va($x)
  prop "vertical-align" $x
w($x)
  prop "width" $x
h($x)
  prop "height" $x
size($w, $h = $w)
  prop "height" $h
  prop "width" $w
min-size($w, $h = $w)
  prop "min-height" $h
  prop "min-width" $w
max-size($w, $h = $w)
  prop "max-height" $h
  prop "max-width" $w
set-font($x)
  fn font($x, "family")
  fw font($x, "weight")
box()
  c 0 base(1) base(4)
  ease border-color, background-color
  &:hover, &:focus
    c 0 v("blue") base(5)
octicon($x...)
  +cache("x" + $x)
    .octicon
      c $x
inv()
  filter invert(1)
fade-out()
  bg linear-gradient(to top, base(1), $t)
shadow($x...)
  prop "box-shadow" $x
elevation($x)
  shadow v(s("elevation-%s", $x))
