$cmColors = {
  atom: $blue
  attribute: $yellow
  punctuation: fg("primary")
  comment: $indigo
  def: $blue
  number: $orange
  property: $teal
  operator: $cyan
  string: $green
  string-2: $green
  keyword: $purple
}
map-record($cmColors, '.cm-', color)
code, pre, tt
  set-font "mono"
.CodeMirror-
  &linenumber&gutter-elt
    fw 500
.cm-s-github-light
  &.CodeMirror
    c fg("primary") base(1) base(5)
  .CodeMirror-
    /&gutter&linenumbers, &gutters
      c $indigo base(1) base(4)
    &lines
      c 0 0 base(5)
    &linenumber
      c $indigo
.code .s1
  c $green
.pl-
  &c /* comment, punctuation.definition.comment, string.comment */
    c $indigo
  &c1
    c $purple
  &s, &s > a
    c $green
  &s &v /* string variable */
    c fg("primary")
  &e, &en /* entity.name */
    c $blue
  &s1 &kos
    c $cyan
  &ent /* string source */
    c alt("red")
  &k /* keyword, storage, storage.type */
    c $purple
  &s &pse &s1, &pds /* punctuation.definition.string, source.regexp, string.regexp.character-class */
    c $cyan
  &sr /* string.regexp */
    c $cyan
  &sr &cce /* string.regexp constant.character.escape */
    c alt("red")
  &s, &sr &sre, &sr &sra /* string.regexp string.regexp.arbitrary-repitition */
    c $green
  &v /* variable */
    c alt("red")
  &smw /* sublimelinter.mark.warning */
    c $yellow
  &bu /* invalid.broken, invalid.deprecated, invalid.unimplemented, message.error, brackethighlighter.unmatched, sublimelinter.mark.error */
    c $red
  &ii /* invalid.illegal */
    c fg("light") 0 $red
  &c2 /* carriage-return */
    c fg("light") 0 $red
  &c2::before /* carriage-return */
    content "^M"
  &sr &cce /* string.regexp constant.character.escape */
    c alt("red")
    fw bold
  &ml /* markup.list */
    c $orange
  &mh &en, &ms /* met,.separator */
    c $cyan
  &mh /* markup.heading */
    c $green
    fw bold
  &mi /* markup.italic */
    c $yellow
    font-style italic
  &mb /* markup.bold */
    c fg("light")
    fw bold
  &md /* markup.deleted, meta.diff.header.from-file, punctuation.definition.deleted */
    c $red 0 t("red")
  &mi1 /* markup.inserted, meta.diff.header.to-file, punctuation.definition.inserted */
    c $teal 0 t("teal")
  &mc /* markup.changed, punctuation.definition.changed */
    c $cyan 0 t("cyan")
  &mdr /* meta.diff.range */
    c $teal
    fw bold
  &pse
    c $cyan
  &ba /* brackethighlighter.tag, brackethighlighter.curly, brackethighlighter.round, brackethighlighter.square, brackethighlighter.angle, brackethighlighter.quote */
    c base(9)
  &s1
    c fg("primary")
  &smi
    c $yellow
  &kos
    c fg("secondary")
  &sg /* sublimelinter.gutter-mark */
    c fg("faded")
  &corl /* constant.other.reference.link, string.other.link */
    td underline
